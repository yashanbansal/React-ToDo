{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\React Todo\\\\reacttodo\\\\src\\\\component\\\\todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport todo from \"../images/todo.svg\";\nimport ReactTypingEffect from 'react-typing-effect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalItems = () => {\n  let list = localStorage.getItem('lists');\n\n  if (list) {\n    return JSON.parse(localStorage.getItem('lists'));\n  } else {\n    return [];\n  }\n};\n\nconst Todo = () => {\n  _s();\n\n  const [inputData, setInputData] = useState(\"\");\n  const [items, setItems] = useState(getLocalItems());\n\n  const addItem = () => {\n    if (!inputData) {} else {\n      const allInputData = {\n        id: new Date().getTime.toString(),\n        name: inputData\n      };\n      setItems([...items, allInputData]);\n      setInputData('');\n    }\n  };\n\n  const deleteItem = index => {\n    const updateditems = items.filter(elem => {\n      return index !== elem.id;\n    });\n    setItems(updateditems);\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      return elem.id === id;\n    });\n  };\n\n  const removeAll = () => {\n    setItems([]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('lists', JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"white\",\n              marginBottom: \"40px\",\n              marginTop: \"-50px\",\n              fontSize: \"5rem\",\n              position: \"fixed\",\n              marginLeft: \"-120px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ReactTypingEffect, {\n              speed: 100,\n              eraseSpeed: 100,\n              eraseDelay: 2000,\n              typingDelay: 100,\n              text: [\"ToDoList With React By Yashan..\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"figure\", {\n          style: {\n            marginTop: \"50px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: todo,\n            alt: \"todologo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: \"Add Your List Here \\u270C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add Items..\\u270D\",\n            value: inputData,\n            onChange: e => setInputData(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus add-btn\",\n            title: \"Add item\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: items.map(elem => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"eachItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: elem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-edit add-btn\",\n                  title: \"Edit Item\",\n                  onClick: () => editItem(elem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-trash add-btn\",\n                  title: \"Delete Item\",\n                  onClick: () => deleteItem(elem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this)]\n            }, elem.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn effect04\",\n            \"data-sm-link-text\": \"Remove All\",\n            onClick: removeAll,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"CHECK LIST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 109\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todo, \"2srdUrgiX6FoPYC/6E/xAISk2kU=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/React Projects/React Todo/reacttodo/src/component/todo.js"],"names":["React","useState","useEffect","ReactTypingEffect","getLocalItems","list","localStorage","getItem","JSON","parse","Todo","inputData","setInputData","items","setItems","addItem","allInputData","id","Date","getTime","toString","name","deleteItem","index","updateditems","filter","elem","editItem","newEditItem","find","removeAll","setItem","stringify","color","marginBottom","marginTop","fontSize","position","marginLeft","todo","e","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport todo from '../images/todo.svg';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\n\r\nconst getLocalItems = () => {\r\n    let list = localStorage.getItem('lists');\r\n\r\n    if (list) {\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalItems());\r\n\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n\r\n        } else {\r\n            const allInputData = { id: new Date().getTime.toString(), name: inputData }\r\n            setItems([...items, allInputData]);\r\n            setInputData('');\r\n        }\r\n    }\r\n    const deleteItem = (index) => {\r\n        const updateditems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        });\r\n        setItems(updateditems);\r\n    }\r\n\r\n    const editItem = (id) => {\r\n        let newEditItem = items.find((elem) => {\r\n            return elem.id === id\r\n        })\r\n    }\r\n\r\n    const removeAll = () => {\r\n        setItems([]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <div>\r\n                        <h1 style={{ color: \"white\", marginBottom: \"40px\", marginTop: \"-50px\", fontSize: \"5rem\", position: \"fixed\", marginLeft: \"-120px\" }}>\r\n                            <ReactTypingEffect speed={100} eraseSpeed={100} eraseDelay={2000} typingDelay={100}\r\n                                text={[\"ToDoList With React By Yashan..\"]} />\r\n                        </h1>\r\n                    </div>\r\n                    <figure style={{ marginTop: \"50px\" }}>\r\n                        <img src={todo} alt=\"todologo\" />\r\n                        <figcaption>Add Your List Here ✌</figcaption>\r\n                    </figure>\r\n\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"Add Items..✍\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                        <i className=\"fa fa-plus add-btn\" title=\"Add item\" onClick={addItem}></i>\r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        {\r\n                            items.map((elem) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={elem.id}>\r\n                                        <h3>{elem.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"fa fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(elem.id)}></i>\r\n                                            <i className=\"fa fa-trash add-btn\" title=\"Delete Item\" onClick={() => deleteItem(elem.id)}></i>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span>CHECK LIST</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}