{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\React Todo\\\\reacttodo\\\\src\\\\component\\\\todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport todo from \"../images/todo.svg\";\nimport ReactTypingEffect from 'react-typing-effect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalItmes = () => {\n  let list = localStorage.getItem('lists');\n  console.log(list);\n\n  if (list) {\n    return JSON.parse(localStorage.getItem('lists'));\n  } else {\n    return [];\n  }\n};\n\nconst Todo = () => {\n  _s();\n\n  const [inputData, setInputData] = useState('');\n  const [items, setItems] = useState(getLocalItmes());\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const addItem = () => {\n    if (!inputData) {\n      alert('plzz fill data');\n    } else if (inputData && !toggleSubmit) {\n      setItems(items.map(elem => {\n        if (elem.id === isEditItem) {\n          return { ...elem,\n            name: inputData\n          };\n        }\n\n        return elem;\n      }));\n      setToggleSubmit(true);\n      setInputData('');\n      setIsEditItem(null);\n    } else {\n      const allInputData = {\n        id: new Date().getTime().toString(),\n        name: inputData\n      };\n      setItems([...items, allInputData]);\n      setInputData('');\n    }\n  };\n\n  const deleteItem = index => {\n    const updateditems = items.filter(elem => {\n      return index !== elem.id;\n    });\n    setItems(updateditems);\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      return elem.id === id;\n    });\n    console.log(newEditItem);\n    setToggleSubmit(false);\n    setInputData(newEditItem.name);\n    setIsEditItem(id);\n  };\n\n  const removeAll = () => {\n    setItems([]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('lists', JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"white\",\n              marginBottom: \"40px\",\n              marginTop: \"-50px\",\n              fontSize: \"5rem\",\n              position: \"fixed\",\n              marginLeft: \"-120px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ReactTypingEffect, {\n              speed: 100,\n              eraseSpeed: 100,\n              eraseDelay: 2000,\n              typingDelay: 100,\n              text: [\"ToDoList With React By Yashan..\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"figure\", {\n          style: {\n            marginTop: \"50px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: todo,\n            alt: \"todologo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: \"Add Your List Here \\u270C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add Items..\\u270D\",\n            value: inputData,\n            onChange: e => setInputData(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), toggleSubmit ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus add-btn\",\n            title: \"Add item\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-edit add-btn\",\n            title: \"Update item\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 120\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: items.map(elem => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"eachItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: elem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-edit add-btn\",\n                  title: \"Edit Item\",\n                  onClick: () => editItem(elem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-trash add-btn\",\n                  title: \"Delete Item\",\n                  onClick: () => deleteItem(elem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 41\n              }, this)]\n            }, elem.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn effect04\",\n            \"data-sm-link-text\": \"Remove All\",\n            onClick: removeAll,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"CHECK LIST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 109\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todo, \"cNWRGbDIxDIhVvSsHhb3oWrWf2k=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/React Projects/React Todo/reacttodo/src/component/todo.js"],"names":["React","useState","useEffect","ReactTypingEffect","getLocalItmes","list","localStorage","getItem","console","log","JSON","parse","Todo","inputData","setInputData","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","alert","map","elem","id","name","allInputData","Date","getTime","toString","deleteItem","index","updateditems","filter","editItem","newEditItem","find","removeAll","setItem","stringify","color","marginBottom","marginTop","fontSize","position","marginLeft","todo","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport todo from '../images/todo.svg';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\n\r\nconst getLocalItmes = () => {\r\n    let list = localStorage.getItem('lists');\r\n    console.log(list);\r\n\r\n    if (list) {\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState(getLocalItmes());\r\n    const [toggleSubmit, setToggleSubmit] = useState(true);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert('plzz fill data');\r\n        } else if (inputData && !toggleSubmit) {\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if (elem.id === isEditItem) {\r\n                        return { ...elem, name: inputData }\r\n                    }\r\n                    return elem;\r\n                })\r\n            )\r\n            setToggleSubmit(true);\r\n\r\n            setInputData('');\r\n\r\n            setIsEditItem(null);\r\n        } else {\r\n            const allInputData = { id: new Date().getTime().toString(), name: inputData }\r\n            setItems([...items, allInputData]);\r\n            setInputData('')\r\n        }\r\n    }\r\n\r\n\r\n    const deleteItem = (index) => {\r\n        const updateditems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        });\r\n\r\n        setItems(updateditems);\r\n    }\r\n\r\n\r\n    const editItem = (id) => {\r\n        let newEditItem = items.find((elem) => {\r\n            return elem.id === id\r\n        });\r\n        console.log(newEditItem);\r\n\r\n        setToggleSubmit(false);\r\n\r\n        setInputData(newEditItem.name);\r\n\r\n        setIsEditItem(id);\r\n\r\n    }\r\n\r\n\r\n\r\n    const removeAll = () => {\r\n        setItems([]);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <div>\r\n                        <h1 style={{ color: \"white\", marginBottom: \"40px\", marginTop: \"-50px\", fontSize: \"5rem\", position: \"fixed\", marginLeft: \"-120px\" }}>\r\n                            <ReactTypingEffect speed={100} eraseSpeed={100} eraseDelay={2000} typingDelay={100}\r\n                                text={[\"ToDoList With React By Yashan..\"]} />\r\n                        </h1>\r\n                    </div>\r\n                    <figure style={{ marginTop: \"50px\" }}>\r\n                        <img src={todo} alt=\"todologo\" />\r\n                        <figcaption>Add Your List Here ✌</figcaption>\r\n                    </figure>\r\n\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"Add Items..✍\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                        {\r\n                            toggleSubmit ? <i className=\"fa fa-plus add-btn\" title=\"Add item\" onClick={addItem}></i> : <i className=\"fa fa-edit add-btn\" title=\"Update item\" onClick={addItem}></i>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        {\r\n                            items.map((elem) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={elem.id}>\r\n                                        <h3>{elem.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"fa fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(elem.id)}></i>\r\n                                            <i className=\"fa fa-trash add-btn\" title=\"Delete Item\" onClick={() => deleteItem(elem.id)}></i>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span>CHECK LIST</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}